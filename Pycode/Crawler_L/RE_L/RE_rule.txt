
.	用于匹配除换行符(\n) 之外的所有字符。   
^	用于匹配字符串的开始，即行首。     
$	用于匹配字符串的末尾(末尾如果有换行符\n,就匹配\n前面的那个字符)，即行尾。

*	用于将前面的模式匹配0次或多次(贪婪模式，即尽可能多的匹配)      
+	用于将前面的模式匹配1次或多次(贪婪模式)       
?	用于将前面的模式匹配0次或1次(贪婪模式)       
*?	+?	??	即上面三种特殊字符的非贪婪模式(尽可能少的匹配)。       
{m,n}	用于将前面的模式匹配m次到n次( 贪婪模式)，即最小匹配m次，最大匹配n次。      
{m,n}?  即上面‘{m,n}’的非贪婪版本。       
\	是转义字符，在特殊字符前面加上\，特殊字符就失去了其所代表的含义，比如\+就仅仅代表加号+本身。        
[]	用于标示一组字符，如果是第一个字符，则标示的是一个补集。比如[0-9]表示所有的数字，[ 0-9]表示除了数字外的字符     
|	比如A I B用于匹配A或B。     
(...)	用于匹配括号中的模式，可以在字符串中检索或匹配我们所需要的内容。        

------------------------------范围---------------------------

[]          匹配范围
.           所有字符(除\n外)
^           行首 
$           行尾  
^..str..$   从头匹配到尾 

[0-9]       纯数字
[a-zA-Z]    纯字母
[0-9a-zA-Z] 数字和字母
[#$%^&*]    #或$或%或^或&或*

----------------------------次数-------------------------------

*       0次以上
+       1次以上
{m,}    m次以上

{n}     n次
{m,n}   m-n次   

?       0次 或 1次

-------------------------------转义----------------------------

用转义的时候最好在字符串前面加r即 r'......./b'

\A      从开始匹配
\Z      从结束匹配
\b      匹配单词边界 即单词间的空格
\B      非单词边界

\d      [0-9]
\D      [^\d]非数字

\s      [\t\n\r\f] 匹配任意空白字符
\S      [^\s]匹配任意非空白字符

\w      [a-zA-Z0-9_] 匹配任意 数字 字母 下划线
\W      [^\w]
\\      匹配\


Python默认匹配是贪婪模式：尽可能匹配多个字符，在+*.后面跟？可变为非贪婪模式